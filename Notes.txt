<FUNDAMENTALS AND FS MODULE: NODE JS>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
JS- multipurpose programming language

Intially javacript only used for Dom manipulation
was unable to run outside the browser

in 2009- ryan dahl
NodeJs - Javascript Runtime
-V8 engine used to run javacript
int creates runtime environment for Javascript to run on pc
It can access: OS,files,Network

# It can be used for:
Machine Learning
API development/server-side apps
game development

functions -> modules -> Package/library
ex.. fs module-> file system- read and write files

===================================
# File Handling:
ReadFileSync
ReadFile

writefileSync
writeFile
appendFile

to delete file:
fs.unlinkSync(parameter);

===============================================================
<API DEVELOPMENT FUNDAMENTALS AND HTTP MODULE>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

API- Application Programming Interface
-Any programme that takes input doing some functionality and gives output.
-collection of defferent functionality

front-end(II/GUI/Design)  --  >  API server    -->         backend(database)
(html,css,js)            (java,js,python,php)  (mongodb,SQL)

Server :: can be computer or programme that continously running and job is to provide services (respond) when client asks (request).
-----------------------------------
            Request                |
            ------->               |
Front-end              Back-end    |
 (client)             (API server) |
           <-------                |
           Response                | 
------------------------------------

# components of request:
1] Base Address / IP Address  128.98.8.1 of server
2] Routes / Paths (functionality)   
     Ip Address + route   (URL) Uniform Resourse Locater
     ex.. 128.98.8.1/about?id=1
     ?id=1 => url parameter/variable/query
              - Way of sending data through url

3] CRUD operations (create,Read,update,delete) 
4] Method [GET,POST,PUT,PATCH,DELETE,OPTIONS] api end-points
5] Data through request body
6] Headers (way of sending extra information from client to server)

# Components of response:
1] Data  (Response)
2] Headers
3] Status code :A number applied to every different kind response that occures.
 Response successfull  - 200
 server unable to find - 404


127.0.0.1/ lcoacalhost : local server that is running on any computer
-IP Address  of local server is fixed
- We cant remember Ip address of any server that's why they have domain name ex.. www.google.com

Port numbers:
============
Every server has different port number
to identify whether it is application or database server etc.

# HTTP Module:
==============
-Used to create our own custom server
-Postman -> it is an platform for developers builing and using API.
-Thunder client -> vs code extension
     -alternate to postman

===============================================================================

# UNDERSTANDING GET AND POST IN HTTP MODULE:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        END POINTS:                               USE
+ A user can fetch all data -> GET /products Method used
+ Fetch single  data fetch -> GET/ products?id=1;                     
+ create a new product by sending data through request  -> POST /products

npm i -g nodemon   -> Tool used to run project       
                      Just like a Bot
-Automatically reruns the project after saving

We are using url module to parse the string.
- After '?' all are parameter

convert json string to array of object:
JSON.parse(product);

convert array of object to json string:
JSON.stringify(product);

Response should be string only.

In POST method a huge amount of data is send by request but this data will be send chunk by chunk.

-usen JSON body to send data in Thunder Client
-Takes more time to send data as request